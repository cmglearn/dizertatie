
LEDBlinking.elf:     file format elf32-pic30
architecture: 33FJ64MC802, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000200

Disassembly of section .ivt._ADC1Interrupt:

0000002e <.ivt._ADC1Interrupt>:
  2e:	2c 03 00    	nop       
Disassembly of section .ivt._AddressError:

00000008 <.ivt._AddressError>:
   8:	2c 03 00    	nop       
Disassembly of section .aivt._AltADC1Interrupt:

0000012e <.aivt._AltADC1Interrupt>:
 12e:	2c 03 00    	nop       
Disassembly of section .aivt._AltAddressError:

00000108 <.aivt._AltAddressError>:
 108:	2c 03 00    	nop       
Disassembly of section .aivt._AltC1Interrupt:

0000015a <.aivt._AltC1Interrupt>:
 15a:	2c 03 00    	nop       
Disassembly of section .aivt._AltC1RxRdyInterrupt:

00000158 <.aivt._AltC1RxRdyInterrupt>:
 158:	2c 03 00    	nop       
Disassembly of section .aivt._AltC1TxReqInterrupt:

000001a0 <.aivt._AltC1TxReqInterrupt>:
 1a0:	2c 03 00    	nop       
Disassembly of section .aivt._AltCMPInterrupt:

00000138 <.aivt._AltCMPInterrupt>:
 138:	2c 03 00    	nop       
Disassembly of section .aivt._AltCNInterrupt:

0000013a <.aivt._AltCNInterrupt>:
 13a:	2c 03 00    	nop       
Disassembly of section .aivt._AltCRCInterrupt:

0000019a <.aivt._AltCRCInterrupt>:
 19a:	2c 03 00    	nop       
Disassembly of section .aivt._AltDAC1LInterrupt:

000001b2 <__FOSCSEL-0xf7fe54>:
 1b2:	2c 03 00    	nop       
Disassembly of section .aivt._AltDAC1RInterrupt:

000001b0 <__FOSC-0xf7fe58>:
 1b0:	2c 03 00    	nop       
Disassembly of section .aivt._AltDMA0Interrupt:

0000011c <__FWDT-0xf7feee>:
 11c:	2c 03 00    	nop       
Disassembly of section .aivt._AltDMA1Interrupt:

00000130 <__FICD-0xf7fede>:
 130:	2c 03 00    	nop       
Disassembly of section .aivt._AltDMA2Interrupt:

00000144 <.aivt._AltDMA2Interrupt>:
 144:	2c 03 00    	nop       
Disassembly of section .aivt._AltDMA3Interrupt:

0000015c <.aivt._AltDMA3Interrupt>:
 15c:	2c 03 00    	nop       
Disassembly of section .aivt._AltDMA4Interrupt:

00000170 <.aivt._AltDMA4Interrupt>:
 170:	2c 03 00    	nop       
Disassembly of section .aivt._AltDMA5Interrupt:

0000018e <.aivt._AltDMA5Interrupt>:
 18e:	2c 03 00    	nop       
Disassembly of section .aivt._AltDMA6Interrupt:

0000019c <.aivt._AltDMA6Interrupt>:
 19c:	2c 03 00    	nop       
Disassembly of section .aivt._AltDMA7Interrupt:

0000019e <.aivt._AltDMA7Interrupt>:
 19e:	2c 03 00    	nop       
Disassembly of section .aivt._AltDMACError:

0000010e <.aivt._AltDMACError>:
 10e:	2c 03 00    	nop       
Disassembly of section .aivt._AltFLTA1Interrupt:

00000192 <.aivt._AltFLTA1Interrupt>:
 192:	2c 03 00    	nop       
Disassembly of section .aivt._AltFLTA2Interrupt:

000001a8 <.aivt._AltFLTA2Interrupt>:
 1a8:	2c 03 00    	nop       
Disassembly of section .aivt._AltIC1Interrupt:

00000116 <.aivt._AltIC1Interrupt>:
 116:	2c 03 00    	nop       
Disassembly of section .aivt._AltIC2Interrupt:

0000011e <.aivt._AltIC2Interrupt>:
 11e:	2c 03 00    	nop       
Disassembly of section .aivt._AltIC7Interrupt:

00000140 <.aivt._AltIC7Interrupt>:
 140:	2c 03 00    	nop       
Disassembly of section .aivt._AltIC8Interrupt:

00000142 <.aivt._AltIC8Interrupt>:
 142:	2c 03 00    	nop       
Disassembly of section .aivt._AltINT0Interrupt:

00000114 <.aivt._AltINT0Interrupt>:
 114:	2c 03 00    	nop       
Disassembly of section .aivt._AltINT1Interrupt:

0000013c <.aivt._AltINT1Interrupt>:
 13c:	2c 03 00    	nop       
Disassembly of section .aivt._AltINT2Interrupt:

0000014e <.aivt._AltINT2Interrupt>:
 14e:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt15:

00000132 <.aivt._AltInterrupt15>:
 132:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt21:

0000013e <.aivt._AltInterrupt21>:
 13e:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt37:

0000015e <.aivt._AltInterrupt37>:
 15e:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt38:

00000160 <.aivt._AltInterrupt38>:
 160:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt39:

00000162 <.aivt._AltInterrupt39>:
 162:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt40:

00000164 <.aivt._AltInterrupt40>:
 164:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt41:

00000166 <.aivt._AltInterrupt41>:
 166:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt42:

00000168 <.aivt._AltInterrupt42>:
 168:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt43:

0000016a <.aivt._AltInterrupt43>:
 16a:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt44:

0000016c <.aivt._AltInterrupt44>:
 16c:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt47:

00000172 <.aivt._AltInterrupt47>:
 172:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt48:

00000174 <.aivt._AltInterrupt48>:
 174:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt49:

00000176 <.aivt._AltInterrupt49>:
 176:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt50:

00000178 <.aivt._AltInterrupt50>:
 178:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt51:

0000017a <.aivt._AltInterrupt51>:
 17a:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt52:

0000017c <.aivt._AltInterrupt52>:
 17c:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt53:

0000017e <.aivt._AltInterrupt53>:
 17e:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt54:

00000180 <.aivt._AltInterrupt54>:
 180:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt55:

00000182 <.aivt._AltInterrupt55>:
 182:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt56:

00000184 <.aivt._AltInterrupt56>:
 184:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt59:

0000018a <.aivt._AltInterrupt59>:
 18a:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt60:

0000018c <.aivt._AltInterrupt60>:
 18c:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt64:

00000194 <.aivt._AltInterrupt64>:
 194:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt71:

000001a2 <.aivt._AltInterrupt71>:
 1a2:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt72:

000001a4 <.aivt._AltInterrupt72>:
 1a4:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt76:

000001ac <.aivt._AltInterrupt76>:
 1ac:	2c 03 00    	nop       
Disassembly of section .aivt._AltInterrupt77:

000001ae <.aivt._AltInterrupt77>:
 1ae:	2c 03 00    	nop       
Disassembly of section .aivt._AltMI2C1Interrupt:

00000136 <.aivt._AltMI2C1Interrupt>:
 136:	2c 03 00    	nop       
Disassembly of section .aivt._AltMPWM1Interrupt:

00000186 <.aivt._AltMPWM1Interrupt>:
 186:	2c 03 00    	nop       
Disassembly of section .aivt._AltMPWM2Interrupt:

000001a6 <.aivt._AltMPWM2Interrupt>:
 1a6:	2c 03 00    	nop       
Disassembly of section .aivt._AltMathError:

0000010c <.aivt._AltMathError>:
 10c:	2c 03 00    	nop       
Disassembly of section .aivt._AltOC1Interrupt:

00000118 <.aivt._AltOC1Interrupt>:
 118:	2c 03 00    	nop       
Disassembly of section .aivt._AltOC2Interrupt:

00000120 <.aivt._AltOC2Interrupt>:
 120:	2c 03 00    	nop       
Disassembly of section .aivt._AltOC3Interrupt:

00000146 <.aivt._AltOC3Interrupt>:
 146:	2c 03 00    	nop       
Disassembly of section .aivt._AltOC4Interrupt:

00000148 <.aivt._AltOC4Interrupt>:
 148:	2c 03 00    	nop       
Disassembly of section .aivt._AltOscillatorFail:

00000106 <.aivt._AltOscillatorFail>:
 106:	2c 03 00    	nop       
Disassembly of section .aivt._AltPMPInterrupt:

0000016e <.aivt._AltPMPInterrupt>:
 16e:	2c 03 00    	nop       
Disassembly of section .aivt._AltQEI1Interrupt:

00000188 <.aivt._AltQEI1Interrupt>:
 188:	2c 03 00    	nop       
Disassembly of section .aivt._AltQEI2Interrupt:

000001aa <.aivt._AltQEI2Interrupt>:
 1aa:	2c 03 00    	nop       
Disassembly of section .aivt._AltRTCCInterrupt:

00000190 <.aivt._AltRTCCInterrupt>:
 190:	2c 03 00    	nop       
Disassembly of section .aivt._AltReservedTrap0:

00000104 <.aivt._AltReservedTrap0>:
 104:	2c 03 00    	nop       
Disassembly of section .aivt._AltReservedTrap6:

00000110 <.aivt._AltReservedTrap6>:
 110:	2c 03 00    	nop       
Disassembly of section .aivt._AltReservedTrap7:

00000112 <.aivt._AltReservedTrap7>:
 112:	2c 03 00    	nop       
Disassembly of section .aivt._AltSI2C1Interrupt:

00000134 <.aivt._AltSI2C1Interrupt>:
 134:	2c 03 00    	nop       
Disassembly of section .aivt._AltSPI1ErrInterrupt:

00000126 <.aivt._AltSPI1ErrInterrupt>:
 126:	2c 03 00    	nop       
Disassembly of section .aivt._AltSPI1Interrupt:

00000128 <.aivt._AltSPI1Interrupt>:
 128:	2c 03 00    	nop       
Disassembly of section .aivt._AltSPI2ErrInterrupt:

00000154 <.aivt._AltSPI2ErrInterrupt>:
 154:	2c 03 00    	nop       
Disassembly of section .aivt._AltSPI2Interrupt:

00000156 <.aivt._AltSPI2Interrupt>:
 156:	2c 03 00    	nop       
Disassembly of section .aivt._AltStackError:

0000010a <.aivt._AltStackError>:
 10a:	2c 03 00    	nop       
Disassembly of section .aivt._AltT1Interrupt:

0000011a <.aivt._AltT1Interrupt>:
 11a:	2c 03 00    	nop       
Disassembly of section .aivt._AltT2Interrupt:

00000122 <.aivt._AltT2Interrupt>:
 122:	2c 03 00    	nop       
Disassembly of section .aivt._AltT3Interrupt:

00000124 <.aivt._AltT3Interrupt>:
 124:	2c 03 00    	nop       
Disassembly of section .aivt._AltT4Interrupt:

0000014a <.aivt._AltT4Interrupt>:
 14a:	2c 03 00    	nop       
Disassembly of section .aivt._AltT5Interrupt:

0000014c <.aivt._AltT5Interrupt>:
 14c:	2c 03 00    	nop       
Disassembly of section .aivt._AltU1ErrInterrupt:

00000196 <.aivt._AltU1ErrInterrupt>:
 196:	2c 03 00    	nop       
Disassembly of section .aivt._AltU1RXInterrupt:

0000012a <.aivt._AltU1RXInterrupt>:
 12a:	2c 03 00    	nop       
Disassembly of section .aivt._AltU1TXInterrupt:

0000012c <.aivt._AltU1TXInterrupt>:
 12c:	2c 03 00    	nop       
Disassembly of section .aivt._AltU2ErrInterrupt:

00000198 <.aivt._AltU2ErrInterrupt>:
 198:	2c 03 00    	nop       
Disassembly of section .aivt._AltU2RXInterrupt:

00000150 <.aivt._AltU2RXInterrupt>:
 150:	2c 03 00    	nop       
Disassembly of section .aivt._AltU2TXInterrupt:

00000152 <.aivt._AltU2TXInterrupt>:
 152:	2c 03 00    	nop       
Disassembly of section .ivt._C1Interrupt:

0000005a <.ivt._C1Interrupt>:
  5a:	2c 03 00    	nop       
Disassembly of section .ivt._C1RxRdyInterrupt:

00000058 <.ivt._C1RxRdyInterrupt>:
  58:	2c 03 00    	nop       
Disassembly of section .ivt._C1TxReqInterrupt:

000000a0 <.ivt._C1TxReqInterrupt>:
  a0:	2c 03 00    	nop       
Disassembly of section .ivt._CMPInterrupt:

00000038 <.ivt._CMPInterrupt>:
  38:	2c 03 00    	nop       
Disassembly of section .ivt._CNInterrupt:

0000003a <.ivt._CNInterrupt>:
  3a:	2c 03 00    	nop       
Disassembly of section .ivt._CRCInterrupt:

0000009a <.ivt._CRCInterrupt>:
  9a:	2c 03 00    	nop       
Disassembly of section .ivt._DAC1LInterrupt:

000000b2 <.ivt._DAC1LInterrupt>:
  b2:	2c 03 00    	nop       
Disassembly of section .ivt._DAC1RInterrupt:

000000b0 <.ivt._DAC1RInterrupt>:
  b0:	2c 03 00    	nop       
Disassembly of section .ivt._DMA0Interrupt:

0000001c <.ivt._DMA0Interrupt>:
  1c:	2c 03 00    	nop       
Disassembly of section .ivt._DMA1Interrupt:

00000030 <.ivt._DMA1Interrupt>:
  30:	2c 03 00    	nop       
Disassembly of section .ivt._DMA2Interrupt:

00000044 <.ivt._DMA2Interrupt>:
  44:	2c 03 00    	nop       
Disassembly of section .ivt._DMA3Interrupt:

0000005c <.ivt._DMA3Interrupt>:
  5c:	2c 03 00    	nop       
Disassembly of section .ivt._DMA4Interrupt:

00000070 <.ivt._DMA4Interrupt>:
  70:	2c 03 00    	nop       
Disassembly of section .ivt._DMA5Interrupt:

0000008e <.ivt._DMA5Interrupt>:
  8e:	2c 03 00    	nop       
Disassembly of section .ivt._DMA6Interrupt:

0000009c <.ivt._DMA6Interrupt>:
  9c:	2c 03 00    	nop       
Disassembly of section .ivt._DMA7Interrupt:

0000009e <.ivt._DMA7Interrupt>:
  9e:	2c 03 00    	nop       
Disassembly of section .ivt._DMACError:

0000000e <.ivt._DMACError>:
   e:	2c 03 00    	nop       
Disassembly of section .ivt._FLTA1Interrupt:

00000092 <.ivt._FLTA1Interrupt>:
  92:	2c 03 00    	nop       
Disassembly of section .ivt._FLTA2Interrupt:

000000a8 <.ivt._FLTA2Interrupt>:
  a8:	2c 03 00    	nop       
Disassembly of section .ivt._IC1Interrupt:

00000016 <.ivt._IC1Interrupt>:
  16:	2c 03 00    	nop       
Disassembly of section .ivt._IC2Interrupt:

0000001e <.ivt._IC2Interrupt>:
  1e:	2c 03 00    	nop       
Disassembly of section .ivt._IC7Interrupt:

00000040 <.ivt._IC7Interrupt>:
  40:	2c 03 00    	nop       
Disassembly of section .ivt._IC8Interrupt:

00000042 <.ivt._IC8Interrupt>:
  42:	2c 03 00    	nop       
Disassembly of section .ivt._INT0Interrupt:

00000014 <.ivt._INT0Interrupt>:
  14:	2c 03 00    	nop       
Disassembly of section .ivt._INT1Interrupt:

0000003c <.ivt._INT1Interrupt>:
  3c:	2c 03 00    	nop       
Disassembly of section .ivt._INT2Interrupt:

0000004e <.ivt._INT2Interrupt>:
  4e:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt15:

00000032 <.ivt._Interrupt15>:
  32:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt21:

0000003e <.ivt._Interrupt21>:
  3e:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt37:

0000005e <.ivt._Interrupt37>:
  5e:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt38:

00000060 <.ivt._Interrupt38>:
  60:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt39:

00000062 <.ivt._Interrupt39>:
  62:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt40:

00000064 <.ivt._Interrupt40>:
  64:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt41:

00000066 <.ivt._Interrupt41>:
  66:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt42:

00000068 <.ivt._Interrupt42>:
  68:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt43:

0000006a <.ivt._Interrupt43>:
  6a:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt44:

0000006c <.ivt._Interrupt44>:
  6c:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt47:

00000072 <.ivt._Interrupt47>:
  72:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt48:

00000074 <.ivt._Interrupt48>:
  74:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt49:

00000076 <.ivt._Interrupt49>:
  76:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt50:

00000078 <.ivt._Interrupt50>:
  78:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt51:

0000007a <.ivt._Interrupt51>:
  7a:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt52:

0000007c <.ivt._Interrupt52>:
  7c:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt53:

0000007e <.ivt._Interrupt53>:
  7e:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt54:

00000080 <.ivt._Interrupt54>:
  80:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt55:

00000082 <.ivt._Interrupt55>:
  82:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt56:

00000084 <.ivt._Interrupt56>:
  84:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt59:

0000008a <.ivt._Interrupt59>:
  8a:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt60:

0000008c <.ivt._Interrupt60>:
  8c:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt64:

00000094 <.ivt._Interrupt64>:
  94:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt71:

000000a2 <.ivt._Interrupt71>:
  a2:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt72:

000000a4 <.ivt._Interrupt72>:
  a4:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt76:

000000ac <.ivt._Interrupt76>:
  ac:	2c 03 00    	nop       
Disassembly of section .ivt._Interrupt77:

000000ae <.ivt._Interrupt77>:
  ae:	2c 03 00    	nop       
Disassembly of section .ivt._MI2C1Interrupt:

00000036 <.ivt._MI2C1Interrupt>:
  36:	2c 03 00    	nop       
Disassembly of section .ivt._MPWM1Interrupt:

00000086 <.ivt._MPWM1Interrupt>:
  86:	2c 03 00    	nop       
Disassembly of section .ivt._MPWM2Interrupt:

000000a6 <.ivt._MPWM2Interrupt>:
  a6:	2c 03 00    	nop       
Disassembly of section .ivt._MathError:

0000000c <.ivt._MathError>:
   c:	2c 03 00    	nop       
Disassembly of section .ivt._OC1Interrupt:

00000018 <.ivt._OC1Interrupt>:
  18:	2c 03 00    	nop       
Disassembly of section .ivt._OC2Interrupt:

00000020 <.ivt._OC2Interrupt>:
  20:	2c 03 00    	nop       
Disassembly of section .ivt._OC3Interrupt:

00000046 <.ivt._OC3Interrupt>:
  46:	2c 03 00    	nop       
Disassembly of section .ivt._OC4Interrupt:

00000048 <.ivt._OC4Interrupt>:
  48:	2c 03 00    	nop       
Disassembly of section .ivt._OscillatorFail:

00000006 <.ivt._OscillatorFail>:
   6:	2c 03 00    	nop       
Disassembly of section .ivt._PMPInterrupt:

0000006e <.ivt._PMPInterrupt>:
  6e:	2c 03 00    	nop       
Disassembly of section .ivt._QEI1Interrupt:

00000088 <.ivt._QEI1Interrupt>:
  88:	2c 03 00    	nop       
Disassembly of section .ivt._QEI2Interrupt:

000000aa <.ivt._QEI2Interrupt>:
  aa:	2c 03 00    	nop       
Disassembly of section .ivt._RTCCInterrupt:

00000090 <.ivt._RTCCInterrupt>:
  90:	2c 03 00    	nop       
Disassembly of section .ivt._ReservedTrap0:

00000004 <.ivt._ReservedTrap0>:
   4:	2c 03 00    	nop       
Disassembly of section .ivt._ReservedTrap6:

00000010 <.ivt._ReservedTrap6>:
  10:	2c 03 00    	nop       
Disassembly of section .ivt._ReservedTrap7:

00000012 <.ivt._ReservedTrap7>:
  12:	2c 03 00    	nop       
Disassembly of section .ivt._SI2C1Interrupt:

00000034 <.ivt._SI2C1Interrupt>:
  34:	2c 03 00    	nop       
Disassembly of section .ivt._SPI1ErrInterrupt:

00000026 <.ivt._SPI1ErrInterrupt>:
  26:	2c 03 00    	nop       
Disassembly of section .ivt._SPI1Interrupt:

00000028 <.ivt._SPI1Interrupt>:
  28:	2c 03 00    	nop       
Disassembly of section .ivt._SPI2ErrInterrupt:

00000054 <.ivt._SPI2ErrInterrupt>:
  54:	2c 03 00    	nop       
Disassembly of section .ivt._SPI2Interrupt:

00000056 <.ivt._SPI2Interrupt>:
  56:	2c 03 00    	nop       
Disassembly of section .ivt._StackError:

0000000a <.ivt._StackError>:
   a:	2c 03 00    	nop       
Disassembly of section .ivt._T2Interrupt:

00000022 <.ivt._T2Interrupt>:
  22:	2c 03 00    	nop       
Disassembly of section .ivt._T3Interrupt:

00000024 <.ivt._T3Interrupt>:
  24:	2c 03 00    	nop       
Disassembly of section .ivt._T4Interrupt:

0000004a <.ivt._T4Interrupt>:
  4a:	2c 03 00    	nop       
Disassembly of section .ivt._T5Interrupt:

0000004c <.ivt._T5Interrupt>:
  4c:	2c 03 00    	nop       
Disassembly of section .ivt._U1ErrInterrupt:

00000096 <.ivt._U1ErrInterrupt>:
  96:	2c 03 00    	nop       
Disassembly of section .ivt._U1RXInterrupt:

0000002a <.ivt._U1RXInterrupt>:
  2a:	2c 03 00    	nop       
Disassembly of section .ivt._U1TXInterrupt:

0000002c <.ivt._U1TXInterrupt>:
  2c:	2c 03 00    	nop       
Disassembly of section .ivt._U2ErrInterrupt:

00000098 <.ivt._U2ErrInterrupt>:
  98:	2c 03 00    	nop       
Disassembly of section .ivt._U2RXInterrupt:

00000050 <.ivt._U2RXInterrupt>:
  50:	2c 03 00    	nop       
Disassembly of section .ivt._U2TXInterrupt:

00000052 <.ivt._U2TXInterrupt>:
  52:	2c 03 00    	nop       
Disassembly of section .reset:

00000000 <.reset>:
   0:	00 02 04    	goto      0x200 <__reset>
   2:	00 00 00 
Disassembly of section .text:

00000200 <__reset>:
 200:	2f 81 20    	mov.w     #0x812, w15
 202:	0e 7f 24    	mov.w     #0x47f0, w14
 204:	0e 01 88    	mov.w     w14, 0x20
 206:	00 00 00    	nop       
 208:	00 00 20    	mov.w     #0x0, w0
 20a:	00 00 e0    	cp0.w     w0
 20c:	02 00 32    	bra       Z, 0x212 <CORCON_RESET>
 20e:	00 01 20    	mov.w     #0x10, w0
 210:	20 02 88    	mov.w     w0, 0x44

00000212 <CORCON_RESET>:
 212:	0c 00 07    	rcall     0x22c <__psv_init>
 214:	40 36 20    	mov.w     #0x364, w0
 216:	01 00 20    	mov.w     #0x0, w1
 218:	11 00 07    	rcall     0x23c <__data_init> <__data_init_standard>
 21a:	00 00 20    	mov.w     #0x0, w0
 21c:	00 00 e0    	cp0.w     w0
 21e:	02 00 32    	bra       Z, 0x224 <L11>
 220:	00 00 02    	call      0x0 <__reset-0x200>
 222:	00 00 00 

00000224 <L11>:
 224:	06 03 02    	call      0x306 <_main>
 226:	00 00 00 
 228:	00 40 da    	.pword 0xda4000
 22a:	00 00 fe    	reset     

0000022c <__psv_init>:
 22c:	44 40 a9    	bclr.b    0x44, #0x2
 22e:	20 00 20    	mov.w     #0x2, w0
 230:	00 00 e0    	cp0.w     w0
 232:	03 00 32    	bra       Z, 0x23a <L12>
 234:	00 00 20    	mov.w     #0x0, w0
 236:	a0 01 88    	mov.w     w0, 0x34
 238:	44 40 a8    	bset.b    0x44, #0x2

0000023a <L12>:
 23a:	00 00 06    	return    

0000023c <__data_init>:
 23c:	91 01 88    	mov.w     w1, 0x32
 23e:	80 00 78    	mov.w     w0, w1
 240:	00 00 eb    	clr.w     w0
 242:	15 00 37    	bra       0x26e <L41>

00000244 <L11>:
 244:	e2 80 40    	add.w     w1, #0x2, w1
 246:	32 a0 b4    	addc.w    0x32
 248:	91 01 ba    	tblrdl.w  [w1], w3
 24a:	e2 80 40    	add.w     w1, #0x2, w1
 24c:	32 a0 b4    	addc.w    0x32
 24e:	91 02 ba    	tblrdl.w  [w1], w5
 250:	e2 80 40    	add.w     w1, #0x2, w1
 252:	32 a0 b4    	addc.w    0x32
 254:	00 02 eb    	clr.w     w4
 256:	47 2b de    	lsr.w     w5, #0x7, w6
 258:	f5 07 b2    	and.w     #0x7f, w5
 25a:	60 2c e1    	cp.b      w5, #0x0
 25c:	04 00 3a    	bra       NZ, 0x266 <L21>

0000025e <L91>:
 25e:	00 59 eb    	clr.b     [w2++]
 260:	83 01 e9    	dec.w     w3, w3
 262:	fd ff 3e    	bra       GTU, 0x25e <L91>
 264:	04 00 37    	bra       0x26e <L41>

00000266 <L21>:
 266:	61 28 e1    	cp.w      w5, #0x1
 268:	01 00 32    	bra       Z, 0x26c <L31>
 26a:	00 82 eb    	setm.w    w4

0000026c <L31>:
 26c:	0b 00 07    	rcall     0x284 <L13> <__memcpypd3_std>

0000026e <L41>:
 26e:	11 c3 ba    	tblrdh.b  [w1], w6
 270:	11 01 ba    	tblrdl.w  [w1], w2
 272:	06 04 e0    	cp0.b     w6
 274:	03 00 3a    	bra       NZ, 0x27c <L12>
 276:	02 00 e0    	cp0.w     w2
 278:	e5 ff 3a    	bra       NZ, 0x244 <L11>
 27a:	00 00 06    	return    

0000027c <L12>:
 27c:	f6 07 b2    	and.w     #0x7f, w6
 27e:	96 01 88    	mov.w     w6, 0x32
 280:	82 00 78    	mov.w     w2, w1
 282:	f5 ff 37    	bra       0x26e <L41>

00000284 <L13>:
 284:	31 59 ba    	tblrdl.b  [w1++], [w2++]
 286:	83 01 e9    	dec.w     w3, w3
 288:	0c 00 32    	bra       Z, 0x2a2 <L22>
 28a:	21 59 ba    	tblrdl.b  [w1--], [w2++]
 28c:	83 01 e9    	dec.w     w3, w3
 28e:	08 00 32    	bra       Z, 0x2a0 <L42>
 290:	04 00 e0    	cp0.w     w4
 292:	03 00 3a    	bra       NZ, 0x29a <L14>

00000294 <L32>:
 294:	e2 80 40    	add.w     w1, #0x2, w1
 296:	32 a0 b4    	addc.w    0x32
 298:	f5 ff 37    	bra       0x284 <L13> <__memcpypd3_std>

0000029a <L14>:
 29a:	11 d9 ba    	tblrdh.b  [w1], [w2++]
 29c:	83 01 e9    	dec.w     w3, w3
 29e:	fa ff 3a    	bra       NZ, 0x294 <L32>

000002a0 <L42>:
 2a0:	81 00 e8    	inc.w     w1, w1

000002a2 <L22>:
 2a2:	e1 80 40    	add.w     w1, #0x1, w1
 2a4:	32 a0 b4    	addc.w    0x32
 2a6:	00 00 06    	return    

000002a8 <__T1Interrupt>:
_FICD( JTAGEN_OFF ) ;

/* Scheduler */
void __attribute__((__interrupt__,__auto_psv__)) _T1Interrupt(void)
{
 2a8:	36 00 f8    	push      0x36
 2aa:	80 9f be    	mov.d     w0, [w15++]
 2ac:	82 9f be    	mov.d     w2, [w15++]
 2ae:	84 9f be    	mov.d     w4, [w15++]
 2b0:	86 9f be    	mov.d     w6, [w15++]
 2b2:	34 00 f8    	push      0x34
 2b4:	00 00 20    	mov.w     #0x0, w0
 2b6:	a0 01 88    	mov.w     w0, 0x34

000002b8 <.LBB2>:
  {
    struct {
      unsigned int Flags0 : 1;
      unsigned int Flags1 : 1;
    } static volatile Overrun;

    struct {
      unsigned int Flags0 : 1;
      unsigned int Flags1 : 1;
    } static volatile event;

    static int_T taskCounter[2] = { 0, 0 };

    _T1IF = 0;                         /* Re-enable interrupt */
 2b8:	84 60 a9    	bclr.b    0x84, #0x3

    /* Check subrate overrun, set rates that need to run this time step*/
    if (taskCounter[1] == 0) {         /* task dropped on overload */
 2ba:	60 40 80    	mov.w     0x80c, w0
 2bc:	00 00 e0    	cp0.w     w0
 2be:	04 00 3a    	bra       NZ, 0x2c8 <.L2>
      event.Flags1 = 1U;
 2c0:	0e 28 a8    	bset.b    0x80e, #0x1
    }

    /* Update task internal counters */
    taskCounter[1]++;
 2c2:	10 00 20    	mov.w     #0x1, w0
 2c4:	60 40 88    	mov.w     w0, 0x80c
 2c6:	06 00 37    	bra       0x2d4 <.L3>

000002c8 <.L2>:
 2c8:	00 00 e8    	inc.w     w0, w0
 2ca:	60 40 88    	mov.w     w0, 0x80c
    if (taskCounter[1] == 500) {
 2cc:	41 1f 20    	mov.w     #0x1f4, w1
 2ce:	81 0f 50    	sub.w     w0, w1, [w15]
 2d0:	01 00 3a    	bra       NZ, 0x2d4 <.L3>
      taskCounter[1]= 0;
 2d2:	0c 28 ef    	clr.w     0x80c

000002d4 <.L3>:
    }

    /* Step the model for base rate */
    /* Start profiling task 0 */
    LEDBlinking_step0();
 2d4:	2e 00 07    	rcall     0x332 <_LEDBlinking_step0> <.L0> <.LFB2> <.Ltext0>

    /* Get model outputs here */
    _T1IF = 0;                         /* Re-enable interrupt */
 2d6:	84 60 a9    	bclr.b    0x84, #0x3

    /* Stop profiling task 0 */
    if (_T1IF ) {
 2d8:	84 60 ab    	btst.b    0x84, #0x3
 2da:	0e 00 3a    	bra       NZ, 0x2f8 <.L1> <.LBE2>
      return;                          /* Will re-enter into the interrupt */
    }

    /* Re-Enable Interrupt. IPL value is 2 at this point */
    _IPL0 = 1;                         /* Set IPL to 1 (interrupt priority is 2) */
 2dc:	42 a0 a8    	bset.b    0x42, #0x5
    _IPL1 = 0;
 2de:	42 c0 a9    	bclr.b    0x42, #0x6

    /* Step the model for any subrate */
    /* Handle Task 1 */
    if (Overrun.Flags1) {
 2e0:	10 28 ab    	btst.b    0x810, #0x1
 2e2:	0a 00 3a    	bra       NZ, 0x2f8 <.L1> <.LBE2>
      return;                          /* Priority to higher rate steps interrupted */
    }

    if (event.Flags1) {
 2e4:	0e 28 ab    	btst.b    0x80e, #0x1
 2e6:	06 00 32    	bra       Z, 0x2f4 <.L5>
      Overrun.Flags1 = 1;
 2e8:	10 28 a8    	bset.b    0x810, #0x1

000002ea <.L6>:
      do {
        /* Start profiling task 1 */
        event.Flags1 = 0U;
 2ea:	0e 28 a9    	bclr.b    0x80e, #0x1
        LEDBlinking_step1();
 2ec:	23 00 07    	rcall     0x334 <_LEDBlinking_step1> <L0> <.LFB3> <.LFE2>

        /* Get model outputs here */
        ;                              /* Execute task tid 1 */

        /* Stop profiling task 1 */
      } while (event.Flags1);
 2ee:	0e 28 ab    	btst.b    0x80e, #0x1
 2f0:	fc ff 3a    	bra       NZ, 0x2ea <.L6>

      Overrun.Flags1 = 0U;
 2f2:	10 28 a9    	bclr.b    0x810, #0x1

000002f4 <.L5>:
    }

    /* Disable Interrupt. IPL value is 1 at this point */
    _IPL1 = 1;                         /* Set IPL to 2 (interrupt priority was 1) */
 2f4:	42 c0 a8    	bset.b    0x42, #0x6
    _IPL0 = 0;
 2f6:	42 a0 a9    	bclr.b    0x42, #0x5

000002f8 <.L1>:
  }
}
 2f8:	34 00 f9    	pop       0x34
 2fa:	4f 03 be    	mov.d     [--w15], w6
 2fc:	4f 02 be    	mov.d     [--w15], w4
 2fe:	4f 01 be    	mov.d     [--w15], w2
 300:	4f 00 be    	mov.d     [--w15], w0
 302:	36 00 f9    	pop       0x36
 304:	00 40 06    	retfie    

00000306 <_main>:

int main()
{
  /* Initialize model */
  /* Configure Pins as Analog or Digital */
  AD1PCFGL = 32;
 306:	00 02 20    	mov.w     #0x20, w0
 308:	60 19 88    	mov.w     w0, 0x32c

  /* Configure Remappables Pins */

  /* Configure Digitals I/O directions */
  TRISB = 0xFEF7;
 30a:	70 ef 2f    	mov.w     #0xfef7, w0
 30c:	40 16 88    	mov.w     w0, 0x2c8

  /* Initialize model */
  LEDBlinking_initialize();
 30e:	29 00 07    	rcall     0x362 <_LEDBlinking_initialize> <L0> <.LFB4> <.LFE3>

  /* Configure Timers */
  /* --- TIMER 1 --- This timer is enabled at end of configuration functions. */
  _T1IP = 2;                           /* Set timer Interrupt Priority */
 310:	20 05 80    	mov.w     0xa4, w0
 312:	00 c0 a1    	bclr.w    w0, #0xc
 314:	00 d0 a0    	bset.w    w0, #0xd
 316:	00 e0 a1    	bclr.w    w0, #0xe
 318:	20 05 88    	mov.w     w0, 0xa4
  _T1IF = 0;                           /* Reset pending Interrupt */
 31a:	84 60 a9    	bclr.b    0x84, #0x3
  _T1IE = 1;                           /* Enable Timer Interrupt. */
 31c:	94 60 a8    	bset.b    0x94, #0x3
  PR1 = 0x0E64;                        /* Period */
 31e:	40 e6 20    	mov.w     #0xe64, w0
 320:	10 08 88    	mov.w     w0, 0x102

  /* Enable Time-step */
  TMR1 = 0x0E63;
 322:	00 00 e9    	dec.w     w0, w0
 324:	00 08 88    	mov.w     w0, 0x100
  T1CON = 0x8000;                      /* Timer 1 is the source trigger for the model Time-step */
 326:	00 00 28    	mov.w     #0x8000, w0
 328:	20 08 88    	mov.w     w0, 0x104

0000032a <.L9>:
 32a:	ff ff 37    	bra       .

0000032c <__DefaultInterrupt>:
 32c:	00 40 da    	.pword 0xda4000
 32e:	00 00 fe    	reset     
Disassembly of section __FOSCSEL:

00f80006 <__FOSCSEL>:
  f80006:	f8 ff 00    	nop       
Disassembly of section __FOSC:

00f80008 <__FOSC>:
  f80008:	bf ff 00    	nop       
Disassembly of section __FWDT:

00f8000a <__FWDT>:
  f8000a:	7f ff 00    	nop       
Disassembly of section __FICD:

00f8000e <__FICD>:
  f8000e:	df ff 00    	nop       
Disassembly of section .ivt._T1Interrupt:

0000001a <.ivt._T1Interrupt>:
  1a:	a8 02 00    	nop       
Disassembly of section .text:

00000332 <_LEDBlinking_step0>:
/* Model step function for TID0 */
void LEDBlinking_step0(void)           /* Sample time: [0.001s, 0.0s] */
{
  /* (no output/update code required) */
}
 332:	00 00 06    	return    

00000334 <_LEDBlinking_step1>:

/* Model step function for TID1 */
void LEDBlinking_step1(void)           /* Sample time: [0.5s, 0.0s] */
{
  /* local block i/o variables */
  boolean_T rtb_DataTypeConversion;
  uint8_T rtb_FixPtSum1;

  /* DataTypeConversion: '<Root>/Data Type Conversion' incorporates:
   *  UnitDelay: '<S1>/Output'
   */
  rtb_DataTypeConversion = (rtDW.Output_DSTATE != 0);
 334:	00 c8 bf    	mov.b     0x800, WREG

  /* S-Function (MCHP_Digital_Output_Write): '<S2>/Digital Output Write' */
  LATBbits.LATB3 = rtb_DataTypeConversion;
 336:	80 80 fb    	ze        w0, w1
 338:	81 00 ea    	neg.w     w1, w1
 33a:	cf 08 de    	lsr.w     w1, #0xf, w1
 33c:	43 09 dd    	sl.w      w1, #0x3, w2
 33e:	73 ff 2f    	mov.w     #0xfff7, w3
 340:	64 16 80    	mov.w     0x2cc, w4
 342:	84 81 61    	and.w     w3, w4, w3
 344:	83 01 71    	ior.w     w2, w3, w3
 346:	63 16 88    	mov.w     w3, 0x2cc
  LATBbits.LATB8 = rtb_DataTypeConversion;
 348:	c8 08 dd    	sl.w      w1, #0x8, w1
 34a:	f2 ef 2f    	mov.w     #0xfeff, w2
 34c:	63 16 80    	mov.w     0x2cc, w3
 34e:	03 01 61    	and.w     w2, w3, w2
 350:	02 81 70    	ior.w     w1, w2, w2
 352:	62 16 88    	mov.w     w2, 0x2cc

  /* Sum: '<S3>/FixPt Sum1' incorporates:
   *  Constant: '<S3>/FixPt Constant'
   *  UnitDelay: '<S1>/Output'
   */
  rtb_FixPtSum1 = (uint8_T)(rtDW.Output_DSTATE + 1U);
 354:	00 40 e8    	inc.b     w0, w0

  /* Switch: '<S4>/FixPt Switch' */
  if (rtb_FixPtSum1 > 1) {
 356:	e1 4f 50    	sub.b     w0, #0x1, [w15]
 358:	02 00 36    	bra       LEU, 0x35e <.L3>
    /* Update for UnitDelay: '<S1>/Output' incorporates:
     *  Constant: '<S4>/Constant'
     */
    rtDW.Output_DSTATE = 0U;
 35a:	00 68 ef    	clr.b     0x800
 35c:	00 00 06    	return    

0000035e <.L3>:
  } else {
    /* Update for UnitDelay: '<S1>/Output' */
    rtDW.Output_DSTATE = rtb_FixPtSum1;
 35e:	00 e8 b7    	mov.b     WREG, 0x800
 360:	00 00 06    	return    

00000362 <_LEDBlinking_initialize>:
  }

  /* End of Switch: '<S4>/FixPt Switch' */
}

/* Model initialize function */
void LEDBlinking_initialize(void)
{
  /* S-Function "Microchip MASTER" initialization Block: <Root>/Microchip Master */
}
 362:	00 00 06    	return    
Disassembly of section .dinit:

00000364 <.dinit>:
 364:	0a 08 00    	nop       
 366:	08 00 00    	nop       
 368:	00 00 00    	nop       
 36a:	00 08 00    	nop       
 36c:	0a 00 00    	nop       
 36e:	00 00 00    	nop       
 370:	72 03 80    	mov.w     0x6e, w2
Disassembly of section .shared.dinit:

00000372 <.shared.dinit>:
 372:	00 00 00    	nop       
